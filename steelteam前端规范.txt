/*
	stellteam团队前端规范

	制作人：	俞常爽	徐开明
	版本：		1.1
	日期：		2015-12-3
	邮箱：		1352667433@qq.com	417300459@qq.com

*/

1.项目结构标准

2.文件命名标准

3.html标准

4.css标准

5.私有样式和公共样式分离

6.js标准

一.项目结构

	css                             -->css文件夹
		--reset.css            		-->重置样式
  	 	--style.css             	-->业务逻辑css
	Images                          -->图片文件夹(按照页面分类)
		--public					-->公共图片文件夹
		--index        				-->私有图片文件夹
	font                            -->字体文件文件夹

	js                              -->js文件夹
		--jquery	             	-->jquery以及jquery系列库
		--html5		              	-->其余的模块 如html5兼容模块 图片自适应模块 等
   		--public	             	-->公共js文件(存放每个html页面都需要用到的一些代码)

	html                            -->具体的html文件


二.文件命名标准

1、html文件命名

	index.html						主页
	login.html						登录
	regiter.html					注册
	fashion.html					服装城
	beautysale.html					美妆
	chaoshi.html					超市
	globalbuy.html					全球购
	fastbuy.html					闪购
	groupbuy.html					团购
	auction.html					拍卖
	finacial.html					金融
	smart.html						智能	

2、css文件命名
	
	参照项目命名规则。
	index.css

3、js文件命名
	
	参照项目命名规则。
	index.js


三、html标准
	
	1、缩进使用soft tab（4个空格）；
	2、嵌套的节点应该缩进；
	3、在属性上，使用双引号，不要使用单引号；
	4、属性名全小写，用中划线做分隔符；
	5、不要在自动闭合标签结尾处使用斜线（HTML5 规范 指出他们是可选的）；
	6、不要忽略可选的关闭标签，例：</li> 和 </body>
	7、根据HTML5规范, 通常在引入CSS和JS时不需要指明 type，因为 text/css 和 text/javascript 分别是他们的默认值。
	8、属性应该按照特定的顺序出现以保证易读性；
		id
		class
		name
		data-*
		src, for, type, href, value , max-length, max, min, pattern
		placeholder, title, alt
		aria-*, role
		required, readonly, disabled



	<!DOCTYPE html>
	<html>
	    <head>
	        <title>Page title</title>
	        <meta http-equiv="X-UA-Compatible" content="IE=Edge">
	        <link rel="stylesheet" href="index.css">
	        <script src="index.js"></script>
	    </head>
	    <body>
	        <img src="images/company_logo.png" alt="Company">
	        <h1 class="hello-world">Hello, world!</h1>
	        <a  id="..." class="..." data-modal="toggle" href="#">Example link</a>
	        <input class="form-control" type="text">
	    </body>
	</html>

	9、class和id命名规范

		头部   							header
		尾部  							footer
		主体 							main 
		主体-左 						main-left
		主体-右							main-right

		侧边栏 							slidebar
		导航   							nav / nav-xx
		导航条							navbar / navbar-xx
		下拉菜单						dropdown
		大标题 							big-title
		小标题 							small-title
		内容   							xx-content
		模块的外层遮罩 					xx-wrap

		列表							list-xx

		表格							table
		斑马表格						table-striped
		边框表格						table-bordered
		表单组							form-group
		表单控制						form-control
		内联表单						form-inline

		按钮							btn
		按钮组							btn-group
		按钮情景						btn-xx / btn-info
		按钮大小						btn-xx / btn-lg / btn-sm

		图片 							img-xx / img-default

		分页							pagination
		上一张							prev
		下一张							next

		当前							active
		成功							success
		信息或者提示					info
		警告							warning
		危险							danger

		警告框							alert-xx


		分类   							cate
		友情链接 						flink
		分站   							arealink
		联系我们 						contact
		留言  							message

	10、模块化布局

		section-xs
		seciton-sm
		seciton-md
		seciton-lg

		option-xs
		option-sm
		option-md
		option-lg
		等等

四.css标准
	
	1、缩进	使用soft tab（4个空格）。
	2、分号	每个属性声明末尾都要加分号。
	3、空格	
	以下几种情况不需要空格：
		
		属性名后
		多个规则的分隔符','前
		!important '!'后
		属性值中'('后和')'前
		行末不要有多余的空格

	以下几种情况需要空格：

		属性值前
		选择器'>', '+', '~'前后
		'{'前
		!important '!'前
		@else 前后
		属性值中的','后
		注释'/*'后和'*/'前
	4、注释
		注释统一用'/* */'（scss中也不要用'//'），具体参照右边的写法；
		缩进与下一行代码保持一致；
		可位于一个代码行的末尾，与代码间隔一个空格

	5、引号
		最外层统一使用双引号；

	.element {
	    color: red !important;
	    background-color: rgba(0, 0, 0, .5);
	}

	.element > .dialog {
	    ...
	}

	.element::after {
	    content: "";
	    background-image: url("logo.png");
	}

	@if {
	    ...
	} @else {
	    ...
	}

	6、命名
		使用小写字母，以中划线分隔
		scss中的变量、函数、混合、placeholder采用 -命名法

	7、css属性声明方式

		.declaration-order {
		    display: block;
		    float: right;

		    position: absolute;
		    top: 0;
		    right: 0;
		    bottom: 0;
		    left: 0;
		    z-index: 100;

		    border: 1px solid #e5e5e5;
		    border-radius: 3px;
		    width: 100px;
		    height: 100px;

		    font: normal 13px "Helvetica Neue", sans-serif;
		    line-height: 1.5;
		    text-align: center;

		    color: #333;
		    background-color: #f5f5f5;

		    opacity: 1;
		}

		// 下面是推荐的属性的顺序
		[
		    [
		        "display",
		        "visibility",
		        "float",
		        "clear",
		        "overflow",
		        "overflow-x",
		        "overflow-y",
		        "clip",
		        "zoom"
		    ],
		    [
		        "table-layout",
		        "empty-cells",
		        "caption-side",
		        "border-spacing",
		        "border-collapse",
		        "list-style",
		        "list-style-position",
		        "list-style-type",
		        "list-style-image"
		    ],
		    [
		        "-webkit-box-orient",
		        "-webkit-box-direction",
		        "-webkit-box-decoration-break",
		        "-webkit-box-pack",
		        "-webkit-box-align",
		        "-webkit-box-flex"
		    ],
		    [
		        "position",
		        "top",
		        "right",
		        "bottom",
		        "left",
		        "z-index"
		    ],
		    [
		        "margin",
		        "margin-top",
		        "margin-right",
		        "margin-bottom",
		        "margin-left",
		        "-webkit-box-sizing",
		        "-moz-box-sizing",
		        "box-sizing",
		        "border",
		        "border-width",
		        "border-style",
		        "border-color",
		        "border-top",
		        "border-top-width",
		        "border-top-style",
		        "border-top-color",
		        "border-right",
		        "border-right-width",
		        "border-right-style",
		        "border-right-color",
		        "border-bottom",
		        "border-bottom-width",
		        "border-bottom-style",
		        "border-bottom-color",
		        "border-left",
		        "border-left-width",
		        "border-left-style",
		        "border-left-color",
		        "-webkit-border-radius",
		        "-moz-border-radius",
		        "border-radius",
		        "-webkit-border-top-left-radius",
		        "-moz-border-radius-topleft",
		        "border-top-left-radius",
		        "-webkit-border-top-right-radius",
		        "-moz-border-radius-topright",
		        "border-top-right-radius",
		        "-webkit-border-bottom-right-radius",
		        "-moz-border-radius-bottomright",
		        "border-bottom-right-radius",
		        "-webkit-border-bottom-left-radius",
		        "-moz-border-radius-bottomleft",
		        "border-bottom-left-radius",
		        "-webkit-border-image",
		        "-moz-border-image",
		        "-o-border-image",
		        "border-image",
		        "-webkit-border-image-source",
		        "-moz-border-image-source",
		        "-o-border-image-source",
		        "border-image-source",
		        "-webkit-border-image-slice",
		        "-moz-border-image-slice",
		        "-o-border-image-slice",
		        "border-image-slice",
		        "-webkit-border-image-width",
		        "-moz-border-image-width",
		        "-o-border-image-width",
		        "border-image-width",
		        "-webkit-border-image-outset",
		        "-moz-border-image-outset",
		        "-o-border-image-outset",
		        "border-image-outset",
		        "-webkit-border-image-repeat",
		        "-moz-border-image-repeat",
		        "-o-border-image-repeat",
		        "border-image-repeat",
		        "padding",
		        "padding-top",
		        "padding-right",
		        "padding-bottom",
		        "padding-left",
		        "width",
		        "min-width",
		        "max-width",
		        "height",
		        "min-height",
		        "max-height"
		    ],
		    [
		        "font",
		        "font-family",
		        "font-size",
		        "font-weight",
		        "font-style",
		        "font-variant",
		        "font-size-adjust",
		        "font-stretch",
		        "font-effect",
		        "font-emphasize",
		        "font-emphasize-position",
		        "font-emphasize-style",
		        "font-smooth",
		        "line-height",
		        "text-align",
		        "-webkit-text-align-last",
		        "-moz-text-align-last",
		        "-ms-text-align-last",
		        "text-align-last",
		        "vertical-align",
		        "white-space",
		        "text-decoration",
		        "text-emphasis",
		        "text-emphasis-color",
		        "text-emphasis-style",
		        "text-emphasis-position",
		        "text-indent",
		        "-ms-text-justify",
		        "text-justify",
		        "letter-spacing",
		        "word-spacing",
		        "-ms-writing-mode",
		        "text-outline",
		        "text-transform",
		        "text-wrap",
		        "-ms-text-overflow",
		        "text-overflow",
		        "text-overflow-ellipsis",
		        "text-overflow-mode",
		        "-ms-word-wrap",
		        "word-wrap",
		        "-ms-word-break",
		        "word-break"
		    ],
		    [
		        "color",
		        "background",
		        "filter:progid:DXImageTransform.Microsoft.AlphaImageLoader",
		        "background-color",
		        "background-image",
		        "background-repeat",
		        "background-attachment",
		        "background-position",
		        "-ms-background-position-x",
		        "background-position-x",
		        "-ms-background-position-y",
		        "background-position-y",
		        "-webkit-background-clip",
		        "-moz-background-clip",
		        "background-clip",
		        "background-origin",
		        "-webkit-background-size",
		        "-moz-background-size",
		        "-o-background-size",
		        "background-size"
		    ],
		    [
		        "outline",
		        "outline-width",
		        "outline-style",
		        "outline-color",
		        "outline-offset",
		        "opacity",
		        "filter:progid:DXImageTransform.Microsoft.Alpha(Opacity",
		        "-ms-filter:\\'progid:DXImageTransform.Microsoft.Alpha",
		        "-ms-interpolation-mode",
		        "-webkit-box-shadow",
		        "-moz-box-shadow",
		        "box-shadow",
		        "filter:progid:DXImageTransform.Microsoft.gradient",
		        "-ms-filter:\\'progid:DXImageTransform.Microsoft.gradient",
		        "text-shadow"
		    ],
		    [
		        "-webkit-transition",
		        "-moz-transition",
		        "-ms-transition",
		        "-o-transition",
		        "transition",
		        "-webkit-transition-delay",
		        "-moz-transition-delay",
		        "-ms-transition-delay",
		        "-o-transition-delay",
		        "transition-delay",
		        "-webkit-transition-timing-function",
		        "-moz-transition-timing-function",
		        "-ms-transition-timing-function",
		        "-o-transition-timing-function",
		        "transition-timing-function",
		        "-webkit-transition-duration",
		        "-moz-transition-duration",
		        "-ms-transition-duration",
		        "-o-transition-duration",
		        "transition-duration",
		        "-webkit-transition-property",
		        "-moz-transition-property",
		        "-ms-transition-property",
		        "-o-transition-property",
		        "transition-property",
		        "-webkit-transform",
		        "-moz-transform",
		        "-ms-transform",
		        "-o-transform",
		        "transform",
		        "-webkit-transform-origin",
		        "-moz-transform-origin",
		        "-ms-transform-origin",
		        "-o-transform-origin",
		        "transform-origin",
		        "-webkit-animation",
		        "-moz-animation",
		        "-ms-animation",
		        "-o-animation",
		        "animation",
		        "-webkit-animation-name",
		        "-moz-animation-name",
		        "-ms-animation-name",
		        "-o-animation-name",
		        "animation-name",
		        "-webkit-animation-duration",
		        "-moz-animation-duration",
		        "-ms-animation-duration",
		        "-o-animation-duration",
		        "animation-duration",
		        "-webkit-animation-play-state",
		        "-moz-animation-play-state",
		        "-ms-animation-play-state",
		        "-o-animation-play-state",
		        "animation-play-state",
		        "-webkit-animation-timing-function",
		        "-moz-animation-timing-function",
		        "-ms-animation-timing-function",
		        "-o-animation-timing-function",
		        "animation-timing-function",
		        "-webkit-animation-delay",
		        "-moz-animation-delay",
		        "-ms-animation-delay",
		        "-o-animation-delay",
		        "animation-delay",
		        "-webkit-animation-iteration-count",
		        "-moz-animation-iteration-count",
		        "-ms-animation-iteration-count",
		        "-o-animation-iteration-count",
		        "animation-iteration-count",
		        "-webkit-animation-direction",
		        "-moz-animation-direction",
		        "-ms-animation-direction",
		        "-o-animation-direction",
		        "animation-direction"
		    ],
		    [
		        "content",
		        "quotes",
		        "counter-reset",
		        "counter-increment",
		        "resize",
		        "cursor",
		        "-webkit-user-select",
		        "-moz-user-select",
		        "-ms-user-select",
		        "user-select",
		        "nav-index",
		        "nav-up",
		        "nav-right",
		        "nav-down",
		        "nav-left",
		        "-moz-tab-size",
		        "-o-tab-size",
		        "tab-size",
		        "-webkit-hyphens",
		        "-moz-hyphens",
		        "hyphens",
		        "pointer-events"
		    ]
		]
	8、颜色
		颜色16进制用小写字母；
		颜色16进制尽量用简写。


五、私有样式和公共样式分离
	如
	/*comment start*/
	/*comment end*/

	/*main start*/
	/*main end*/

	公共样式提取到最前面，注意优先级
	#main, .main-left, .main-right {
		display: block;
		float: left;
	}

	.main{
		width: 400px;
	}

	.main-left {
		width: 200px;
	}

	.main-right {
		width: 200px;
	}

五、js标准
	
	1、缩进
		使用soft tab（4个空格）。

	2、单行长度不要超过120，但如果编辑器开启word wrap可以不考虑单行长度。长字符串拼接用加号。

	3、分号
	以下几种情况后需加分号：
		变量声明
		表达式
		return
		throw
		break
		continue
		do-while

	var x = 1;

	x++;

	do {
	    x++;
	} while (x < 10);

	4、空格
	以下几种情况不需要空格：

		对象的属性名后
		前缀一元运算符后
		后缀一元运算符前
		函数调用括号前
		无论是函数声明还是函数表达式，'('前不要空格
		数组的'['后和']'前
		对象的'{'后和'}'前
		运算符'('后和')'前

	以下几种情况需要空格：

		二元运算符前后
		三元运算符'?:'前后
		代码块'{'前
		下列关键字前：else, while, catch, finally
		下列关键字后：if, else, for, while, do, switch, case, try, catch, finally, with, return, typeof
		单行注释'//'后（若单行注释和代码同行，则'//'前也需要），多行注释'*'后
		对象的属性值前
		for循环，分号后留有一个空格，前置条件如果有多个，逗号后留一个空格
		无论是函数声明还是函数表达式，'{'前一定要有空格
		函数的参数之间

		// not good
		var a = {
		    b :1
		};

		// good
		var a = {
		    b: 1
		};

		// not good
		++ x;
		y ++;
		z = x?1:2;

		// good
		++x;
		y++;
		z = x ? 1 : 2;

		// not good
		var a = [ 1, 2 ];

		// good
		var a = [1, 2];

		// not good
		var a = ( 1+2 )*3;

		// good
		var a = (1 + 2) * 3;

		// no space before '(', one space before '{', one space between function parameters
		var doSomething = function(a, b, c) {
		    // do something
		};

		// no space before '('
		doSomething(item);

		// not good
		for(i=0;i<6;i++){
		    x++;
		}

		// good
		for (i = 0; i < 6; i++) {
		    x++;
		}

	5、空行
	以下几种情况需要空行：

		变量声明后（当变量声明在代码块的最后一行时，则无需空行）
		注释前（当注释在代码块的第一行时，则无需空行）
		代码块后（在函数调用、数组、对象中则无需空行）
		文件最后保留一个空行

		var x = 1;

		if (x >= 1) {
		    var y = x + 1;
		}

		var a = 2;

		a++;

		function b() {
		    return a;
		}

		for (var i = 0; i < 2; i++) {
		    if (true) {
		        return false;
		    }

		    continue;
		}

		var obj = {
		    foo: function() {
		        return 1;
		    },

		    bar: function() {
		        return 2;
		    }
		};
		func(
		    2,
		    function() {
		        a++;
		    },
		    3
		);

		var foo = [
		    2,
		    function() {
		        a++;
		    },
		    3
		];


		var foo = {
		    a: 2,
		    b: function() {
		        a++;
		    },
		    c: 3
		};

	6、换行
		换行的地方，行末必须有','或者运算符；

		以下几种情况不需要换行：

		下列关键字后：else, catch, finally
		代码块'{'前
		以下几种情况需要换行：

		代码块'{'后和'}'前
		定义变量后

		// not good
		var a = {
		    b: 1
		    , c: 2
		};

		x = y
		    ? 1 : 2;

		// good
		var a = {
		    b: 1,
		    c: 2
		};

		x = y ? 1 : 2;

		// no need line break with 'else', 'catch', 'finally'
		if (condition) {
		    ...
		} else {
		    ...
		}

		try {
		    ...
		} catch (e) {
		    ...
		} finally {
		    ...
		}

		// not good
		function test()
		{
		    ...
		}

		// good
		function test() {
		    ...
		}

		// not good
		var a, foo = 7, b,
		    c, bar = 8;

		// good
		var a,
		    foo = 7,
		    b,
		    c,
		    bar = 8;

	7、引号
		最外层统一使用单引号。	  

	8、变量命名
		标准变量采用驼峰式命名（除了对象的属性外，主要是考虑到cgi返回的数据）
		'ID'在变量名中全大写
		'URL'在变量名中全大写
		'Android'在变量名中大写第一个字母
		'iOS'在变量名中小写第一个，大写后两个字母
		常量全大写，用下划线连接
		构造函数，大写第一个字母
		jquery对象必须以'$'开头命名  

		var thisIsMyName;
		var goodID;
		var reportURL;
		var AndroidVersion;
		var iOSVersion;
		var MAX_COUNT = 10;
		function Person(name) {
		    this.name = name;
		}
		// not good
		var body = $('body');

		// good
		var $body = $('body');

	9、变量声明
		一个函数作用域中所有的变量声明提到函数首部，除了for (...)里面使用的一次性变量。
		var的数量不做限制，但要统一，一行定义一个变量。

		function doSomethingWithItems(items) {
		    var a;
		    var b;
		    var value = 10;
		    var result = value + 10;

		    for (var i = 0, len = items.length; i < len; i++) {
		        result += 10;
		    }
		}

	10、函数

		无论是函数声明还是函数表达式，'('前不要空格，但'{'前一定要有空格；
		函数调用括号前不需要空格；
		立即执行函数外必须包一层括号；
		不要给inline function命名；
		参数之间用', '分隔，注意逗号后有一个空格。

		var doSomething = function(item) {
		    // do something
		};

		(function() {
		    return 1;
		})();

	11、数组、对象
		对象属性名不需要加引号；
		对象以缩进的形式书写，不要写在一行；
		数组、对象最后不要有逗号。

		var a = {
		    b: 1,
		    c: 2,
		};